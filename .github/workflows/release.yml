name: Create Release

on:
  push:
    branches: [ release ]
    
env:
  PR_NUMBER: ${{ github.event.number }}
  SEMVER: ${{ vars.SEMVER }}

jobs:
  test-and-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x
      - name: Install dependencies
        run: dotnet restore KyameruFull.sln
      - name: Build
        run: dotnet build KyameruFull.sln --configuration Release --no-restore
      - name: Test
        #run: dotnet test tests/UnitTests/Kyameru.Tests/Kyameru.Tests.csproj --no-restore --verbosity normal /p:ExcludeSources=tests/* /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput=TestCoverage/
        run: dotnet test KyameruFull.sln --no-restore --verbosity normal /p:ExcludeSources=tests/* /p:CollectCoverage=true /p:CoverletOutputFormat="lcov%2cjson" /p:CoverletOutput=${GITHUB_WORKSPACE}/build/TestCoverage/ /p:MergeWith="${GITHUB_WORKSPACE}/build/TestCoverage/coverage.json"  --blame-hang-timeout 2m
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./build/TestCoverage/coverage.info
      - name: generate_tag
        run: |
          echo "${SEMVER}"
          VERSION_PREFIX=""
          VERSION_MAJOR_MINOR="${SEMVER}"
          VERSION_PATCH=$(git tag --list "${VERSION_PREFIX}${VERSION_MAJOR_MINOR}*" --sort=-version:refname | head -n 1)
          echo "CURRENT TAG: ${VERSION_PATCH}"
          VERSION_PATCH="${VERSION_PATCH//-rc}"
          VERSION_PATCH="${VERSION_PATCH//$SEMVER}"
          VERSION_PATCH="${VERSION_PATCH//-beta}"
          if [ -z "$VERSION_PATCH" ]; then
            VERSION_PATCH=0
          else
            VERSION_PATCH=$((VERSION_PATCH + 1))
          fi
          NEW_TAG="${VERSION_PREFIX}${VERSION_MAJOR_MINOR}${VERSION_PATCH}-beta"
          echo "Generated new tag: $NEW_TAG"
          #echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag $NEW_TAG
          git push origin $NEW_TAG