<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Kyameru.Core</name>
    </assembly>
    <members>
        <member name="T:Kyameru.Core.AbstractBuilder">
            <summary>
            Abstract builder class.
            </summary>
            <remarks>
            Will make the below more efficient but readable is better for now,
            optimise later.
            </remarks>
        </member>
        <member name="M:Kyameru.Core.AbstractBuilder.CreateTo(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates the to component.
            </summary>
            <param name="to">Valid component name.</param>
            <param name="headers">Dictionary of headers</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Contracts.IToComponent"/> interface.</returns>
        </member>
        <member name="M:Kyameru.Core.AbstractBuilder.CreateFrom(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>
            Creates the from component.
            </summary>
            <param name="from">Valid component name.</param>
            <param name="headers">Dictionary of headers</param>
            <param name="isAtomic">Indicates if the route is atomic.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Contracts.IFromComponent"/> interface.</returns>
        </member>
        <member name="M:Kyameru.Core.AbstractBuilder.CreateAtomic(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates the atomic component.
            </summary>
            <param name="from">Valid component name.</param>
            <param name="headers">Dictionary of headers</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Contracts.IAtomicComponent"/> interface.</returns>
        </member>
        <member name="M:Kyameru.Core.AbstractBuilder.GetOasis(System.String)">
            <summary>
            Gets the IOasis (activator) from the component.
            </summary>
            <param name="component"></param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Contracts.IOasis"/> interface.</returns>
        </member>
        <member name="T:Kyameru.Core.BaseComponents.AddHeader">
            <summary>
            Add header component.
            </summary>
        </member>
        <member name="F:Kyameru.Core.BaseComponents.AddHeader.header">
            <summary>
            Header value
            </summary>
        </member>
        <member name="F:Kyameru.Core.BaseComponents.AddHeader.value">
            <summary>
            Value for header
            </summary>
        </member>
        <member name="F:Kyameru.Core.BaseComponents.AddHeader.callback">
            <summary>
            Callback for header value
            </summary>
        </member>
        <member name="F:Kyameru.Core.BaseComponents.AddHeader.callbackTwo">
            <summary>
            Callback for header value
            </summary>
        </member>
        <member name="F:Kyameru.Core.BaseComponents.AddHeader.callbackOption">
            <summary>
            Option to hold which callback to use.
            </summary>
        </member>
        <member name="M:Kyameru.Core.BaseComponents.AddHeader.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.BaseComponents.AddHeader"/> class.
            </summary>
            <param name="header">Header value to add.</param>
            <param name="value">Value to assign for header.</param>
        </member>
        <member name="M:Kyameru.Core.BaseComponents.AddHeader.#ctor(System.String,System.Func{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.BaseComponents.AddHeader"/> class.
            </summary>
            <param name="header">Header value to add.</param>
            <param name="callbackOne">Value callback to assign for header.</param>
        </member>
        <member name="M:Kyameru.Core.BaseComponents.AddHeader.#ctor(System.String,System.Func{Kyameru.Core.Entities.Routable,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.BaseComponents.AddHeader"/> class.
            </summary>
            <param name="header">Header value to add.</param>
            <param name="callbackTwo">Value callback to assign for header.</param>
        </member>
        <member name="E:Kyameru.Core.BaseComponents.AddHeader.OnLog">
            <summary>
            Log event
            </summary>
        </member>
        <member name="M:Kyameru.Core.BaseComponents.AddHeader.Process(Kyameru.Core.Entities.Routable)">
            <summary>
            Process the incoming message.
            </summary>
            <param name="routable">Routable message.</param>
        </member>
        <member name="M:Kyameru.Core.BaseComponents.AddHeader.SetError(System.String,System.String)">
            <summary>
            Sets the error object.
            </summary>
            <param name="action">Action performed.</param>
            <param name="message">Error message.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Entities.Error"/> class.</returns>
        </member>
        <member name="T:Kyameru.Core.Builder">
            <summary>
            Builder facility.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Builder.components">
            <summary>
            List of processing components.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Builder.toUris">
            <summary>
            List of to component uris.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Builder.fromUri">
            <summary>
            From URI held to construct atomic component.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Builder.errorComponent">
            <summary>
            Error component.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Builder.atomicComponent">
            <summary>
            Atomic component.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Builder.identity">
            <summary>
            Route Id.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Builder.#ctor(System.Collections.Generic.List{Kyameru.Core.Entities.Processable},Kyameru.Core.Entities.RouteAttributes,Kyameru.Core.Entities.RouteAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Builder"/> class.
            </summary>
            <param name="components">List of intermediary components.</param>
            <param name="to">To component.</param>
            <param name="fromUri">From Uri.</param>
        </member>
        <member name="P:Kyameru.Core.Builder.ToComponentCount">
            <summary>
            Gets the To component count.
            </summary>
        </member>
        <member name="P:Kyameru.Core.Builder.WillProcessError">
            <summary>
            Gets a value indicating whether the error component will process.
            </summary>
        </member>
        <member name="P:Kyameru.Core.Builder.IsAtomic">
            <summary>
            Gets a value indicating whether the route is considered to be atomic.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Builder.To(System.String)">
            <summary>
            Creates a new To component chain.
            </summary>
            <param name="componentUri">Valid Kyameru URI.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Builder"/> class.</returns>
        </member>
        <member name="M:Kyameru.Core.Builder.Atomic">
            <summary>
            Creates an atomic component using the original From URI
            </summary>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Builder"/> class</returns>
        </member>
        <member name="M:Kyameru.Core.Builder.Atomic(System.String)">
            <summary>
            Creates an atomic component using the original From URI
            </summary>
            <param name="componentUri">Valid Kyameru URI.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Builder"/> class</returns>
        </member>
        <member name="M:Kyameru.Core.Builder.Error(Kyameru.Core.Contracts.IErrorComponent)">
            <summary>
            Creates a new Error component chain.
            </summary>
            <param name="errorComponent">Error component.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Builder"/> class.</returns>
        </member>
        <member name="M:Kyameru.Core.Builder.Id(System.String)">
            <summary>
            Sets the identity of the route.
            </summary>
            <param name="id">Name of the route.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Builder"/> class.</returns>
        </member>
        <member name="M:Kyameru.Core.Builder.Build(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Builds the final chain into dependency injection.
            </summary>
            <param name="services">Service collection.</param>
        </member>
        <member name="M:Kyameru.Core.Builder.SetupChain(System.Int32,Microsoft.Extensions.Logging.ILogger,Kyameru.Core.Contracts.IChain{Kyameru.Core.Entities.Routable},System.IServiceProvider)">
            <summary>
            Sets up the processing chain
            </summary>
            <param name="i">Current count.</param>
            <param name="logger">Logger class.</param>
            <param name="toComponents">To components.</param>
            <param name="serviceProvider">DI service provider.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Contracts.IChain`1"/> interface.</returns>
        </member>
        <member name="M:Kyameru.Core.Builder.SetupToChain(System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Sets up the to chain.
            </summary>
            <param name="i">Current count.</param>
            <param name="logger">Logger class.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Contracts.IChain`1"/> interface.</returns>
        </member>
        <member name="M:Kyameru.Core.Builder.GetFinal(Kyameru.Core.Contracts.IChain{Kyameru.Core.Entities.Routable},Kyameru.Core.Contracts.IChain{Kyameru.Core.Entities.Routable})">
            <summary>
            Sets the correct next component.
            </summary>
            <param name="error">Component incoming.</param>
            <param name="atomic">Target chain.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Contracts.IChain`1"/> interface.</returns>
        </member>
        <member name="M:Kyameru.Core.Builder.GetIdentity">
            <summary>
            Gets the identity of the route.
            </summary>
            <returns>Returns either a random identity or specified.</returns>
        </member>
        <member name="T:Kyameru.Core.Chain.BaseChain">
            <summary>
            Base chain for processing
            </summary>
        </member>
        <member name="F:Kyameru.Core.Chain.BaseChain.Logger">
            <summary>
            Logger interface.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Chain.BaseChain.identity">
            <summary>
            Route identity.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Chain.BaseChain.#ctor(Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Chain.BaseChain"/> class.
            </summary>
            <param name="logger">Logging class.</param>
            <param name="identity">Identity of route.</param>
        </member>
        <member name="P:Kyameru.Core.Chain.BaseChain.Next">
            <summary>
            Gets or sets the next component.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Chain.BaseChain.Handle(Kyameru.Core.Entities.Routable)">
            <summary>
            Pass the processing onto the next component.
            </summary>
            <param name="item">Message to process.</param>
        </member>
        <member name="M:Kyameru.Core.Chain.BaseChain.SetNext(Kyameru.Core.Contracts.IChain{Kyameru.Core.Entities.Routable})">
            <summary>
            Sets the next component in the chain.
            </summary>
            <param name="next">Next component.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Contracts.IChain`1"/>/> interface.</returns>
        </member>
        <member name="M:Kyameru.Core.Chain.BaseChain.OnLog(System.Object,Kyameru.Core.Entities.Log)">
            <summary>
            Logging event handler.
            </summary>
            <param name="sender">Class sending the event.</param>
            <param name="e">Log object.</param>
        </member>
        <member name="T:Kyameru.Core.Chain.Error">
            <summary>
            Error processing.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Chain.Error.errorComponent">
            <summary>
            Error component.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Chain.Error.#ctor(Microsoft.Extensions.Logging.ILogger,Kyameru.Core.Contracts.IErrorComponent,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Chain.Error"/> class.
            </summary>
            <param name="logger">Logging interface.</param>
            <param name="errorComponent">Error component.</param>
            <param name="identity">Route identity.</param>
        </member>
        <member name="M:Kyameru.Core.Chain.Error.Handle(Kyameru.Core.Entities.Routable)">
            <summary>
            Passes processing to the next in the chain.
            </summary>
            <param name="item">Message to process.</param>
        </member>
        <member name="T:Kyameru.Core.Chain.From">
            <summary>
            From component.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Chain.From.fromComponent">
            <summary>
            Main from component.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Chain.From.next">
            <summary>
            Next processing component.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Chain.From.logger">
            <summary>
            Logger class.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Chain.From.identity">
            <summary>
            Route identity.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Chain.From.IsAtomicRoute">
            <summary>
            value indicating whether the route will be atomic.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Chain.From.#ctor(Kyameru.Core.Contracts.IFromComponent,Kyameru.Core.Contracts.IChain{Kyameru.Core.Entities.Routable},Microsoft.Extensions.Logging.ILogger,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Chain.From"/> class.
            </summary>
            <param name="fromComponent">From component to use.</param>
            <param name="next">Next processing component.</param>
            <param name="logger">Logger class.</param>
            <param name="id">Identity of the route.</param>
            <param name="isAtomicRoute">Value indicating whether the route is atomic.</param>
        </member>
        <member name="M:Kyameru.Core.Chain.From.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Stops the component.
            </summary>
            <param name="cancellationToken">Cancellation Token.</param>
            <returns>Returns a task.</returns>
        </member>
        <member name="M:Kyameru.Core.Chain.From.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Executes the component.
            </summary>
            <param name="stoppingToken">Stopping Token.</param>
            <returns>Returns a task.</returns>
        </member>
        <member name="M:Kyameru.Core.Chain.From.FromComponent_OnLog(System.Object,Kyameru.Core.Entities.Log)">
            <summary>
            Logging event handler.
            </summary>
            <param name="sender">Class sending the event.</param>
            <param name="e">Log object.</param>
        </member>
        <member name="M:Kyameru.Core.Chain.From.FromComponent_OnAction(System.Object,Kyameru.Core.Entities.Routable)">
            <summary>
            Event raised when the from component starts processing.
            </summary>
            <param name="sender">Class sending the event.</param>
            <param name="e">Message to send.</param>
        </member>
        <member name="T:Kyameru.Core.Chain.Process">
            <summary>
            Intermediary processing component.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Chain.Process.component">
            <summary>
            Core processing component.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Chain.Process.#ctor(Microsoft.Extensions.Logging.ILogger,Kyameru.IProcessComponent,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Chain.Process"/> class.
            </summary>
            <param name="logger">Logger class.</param>
            <param name="processComponent">Processing component.</param>
            <param name="identity">Identity of route.</param>
        </member>
        <member name="M:Kyameru.Core.Chain.Process.Handle(Kyameru.Core.Entities.Routable)">
            <summary>
            Passes processing onto the next component.
            </summary>
            <param name="item">Message to process.</param>
        </member>
        <member name="T:Kyameru.Core.Chain.To">
            <summary>
            To component processing class.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Chain.To.toComponent">
            <summary>
            To Component.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Chain.To.#ctor(Microsoft.Extensions.Logging.ILogger,Kyameru.Core.Contracts.IToComponent,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Chain.To"/> class.
            </summary>
            <param name="logger">Logger class.</param>
            <param name="toComponent">To component.</param>
            <param name="identity">Identity of route.</param>
        </member>
        <member name="M:Kyameru.Core.Chain.To.Handle(Kyameru.Core.Entities.Routable)">
            <summary>
            Passes processing onto the next component.
            </summary>
            <param name="item">Message to process.</param>
        </member>
        <member name="T:Kyameru.Core.Contracts.IAtomicComponent">
            <summary>
            Atomic component executed after the final to.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Contracts.IAtomicComponent.Process(Kyameru.Core.Entities.Routable)">
            <summary>
            Process the incoming request.
            </summary>
            <param name="item">Message to be processed.</param>
        </member>
        <member name="T:Kyameru.Core.Contracts.IChain`1">
            <summary>
            Core processing component interface.
            </summary>
            <typeparam name="T">Type of processing class.</typeparam>
        </member>
        <member name="M:Kyameru.Core.Contracts.IChain`1.SetNext(Kyameru.Core.Contracts.IChain{`0})">
            <summary>
            Sets the next processing component.
            </summary>
            <param name="next">Next component.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Contracts.IChain`1"/> interface.</returns>
        </member>
        <member name="M:Kyameru.Core.Contracts.IChain`1.Handle(`0)">
            <summary>
            Triggers the next component in the chain.
            </summary>
            <param name="item">Processing Component.</param>
        </member>
        <member name="T:Kyameru.Core.Contracts.IComponent">
            <summary>
            Base component.
            </summary>
        </member>
        <member name="E:Kyameru.Core.Contracts.IComponent.OnLog">
            <summary>
            Event raised when a component logs.
            </summary>
        </member>
        <member name="T:Kyameru.Core.Contracts.IErrorComponent">
            <summary>
            Error component.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Contracts.IErrorComponent.Process(Kyameru.Core.Entities.Routable)">
            <summary>
            Process the incoming request.
            </summary>
            <param name="item">Message to be processed.</param>
        </member>
        <member name="T:Kyameru.Core.Contracts.IFromComponent">
            <summary>
            From Component.
            </summary>
        </member>
        <member name="E:Kyameru.Core.Contracts.IFromComponent.OnAction">
            <summary>
            Event raised to trigger processing chain.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Contracts.IFromComponent.Setup">
            <summary>
            Setup the component.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Contracts.IFromComponent.Start">
            <summary>
            Start the core background process.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Contracts.IFromComponent.Stop">
            <summary>
            Stop the component.
            </summary>
        </member>
        <member name="T:Kyameru.Core.Contracts.IOasis">
            <summary>
            Component activation interface.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Contracts.IOasis.CreateFromComponent(System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>
            Creates a from component.
            </summary>
            <param name="headers">Dictionary of headers to apply.</param>
            <param name="isAtomic">Indicates if the route is atomic.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Contracts.IFromComponent"/> interface.</returns>
        </member>
        <member name="M:Kyameru.Core.Contracts.IOasis.CreateToComponent(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates a to component.
            </summary>
            <param name="headers">Dictionary of headers to apply.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Contracts.IToComponent"/> interface.</returns>
        </member>
        <member name="M:Kyameru.Core.Contracts.IOasis.CreateAtomicComponent(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates an atomic component.
            </summary>
            <param name="headers">Dictionary of headers to apply.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Contracts.IAtomicComponent"/> interface.</returns>
        </member>
        <member name="T:Kyameru.Core.Contracts.IToComponent">
            <summary>
            End processing component.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Contracts.IToComponent.Process(Kyameru.Core.Entities.Routable)">
            <summary>
            Process the incoming request.
            </summary>
            <param name="item">Message to be processed.</param>
        </member>
        <member name="T:Kyameru.Core.Entities.Error">
            <summary>
            Error entity.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Entities.Error.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Entities.Error"/> class.
            </summary>
            <param name="component">Name of the component.</param>
            <param name="action">Action being executed.</param>
            <param name="message">Error message.</param>
        </member>
        <member name="P:Kyameru.Core.Entities.Error.Component">
            <summary>
            Gets the component string.
            </summary>
        </member>
        <member name="P:Kyameru.Core.Entities.Error.CurrentAction">
            <summary>
            Gets the executing action.
            </summary>
        </member>
        <member name="P:Kyameru.Core.Entities.Error.Message">
            <summary>
            Gets the error message.
            </summary>
        </member>
        <member name="P:Kyameru.Core.Entities.Error.InnerError">
            <summary>
            Gets the inner error.
            </summary>
        </member>
        <member name="T:Kyameru.Core.Entities.Headers">
            <summary>
            Headers collection.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Entities.Headers.headerStorage">
            <summary>
            Header dictionary.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Entities.Headers.immutable">
            <summary>
            List of immutable header keys.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Entities.Headers.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Entities.Headers"/> class.
            </summary>
            <param name="headers">Headers to create.</param>
        </member>
        <member name="P:Kyameru.Core.Entities.Headers.Item(System.String)">
            <summary>
            Gets a header value by key.
            </summary>
            <param name="key">Dictionary key</param>
            <returns>Dictionary value.</returns>
        </member>
        <member name="M:Kyameru.Core.Entities.Headers.SetHeader(System.String,System.String)">
            <summary>
            Sets a header.
            </summary>
            <param name="key">Header key (prepended by &amp; indicates immutable).</param>
            <param name="value">Header Value.</param>
        </member>
        <member name="T:Kyameru.Core.Entities.Log">
            <summary>
            Standard log entity.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Entities.Log.#ctor(Microsoft.Extensions.Logging.LogLevel,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Entities.Log"/> class.
            </summary>
            <param name="logLevel">Log level.</param>
            <param name="message">Log message.</param>
            <param name="error">Exception class.</param>
        </member>
        <member name="P:Kyameru.Core.Entities.Log.LogLevel">
            <summary>
            Gets the log level.
            </summary>
        </member>
        <member name="P:Kyameru.Core.Entities.Log.Message">
            <summary>
            Gets the log message.
            </summary>
        </member>
        <member name="P:Kyameru.Core.Entities.Log.Error">
            <summary>
            Gets the exception.
            </summary>
        </member>
        <member name="T:Kyameru.Core.Entities.Processable">
            <summary>
            Processable component construct.
            </summary>
        </member>
        <member name="T:Kyameru.Core.Entities.Processable.InvocationType">
            <summary>
            Enum indicating what kind of activation should be used.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Entities.Processable.InvocationType.DI">
            <summary>
            Dependency injected.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Entities.Processable.InvocationType.Concrete">
            <summary>
            Concrete implementation.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Entities.Processable.#ctor(Kyameru.IProcessComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Entities.Processable"/> class.
            </summary>
            <param name="target">Target component.</param>
        </member>
        <member name="M:Kyameru.Core.Entities.Processable.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Entities.Processable"/> class.
            </summary>
            <param name="type">Type to pull from DI.</param>
        </member>
        <member name="P:Kyameru.Core.Entities.Processable.Invocation">
            <summary>
            Gets the invocation type.
            </summary>
        </member>
        <member name="P:Kyameru.Core.Entities.Processable.ComponentType">
            <summary>
            Gets the component type.
            </summary>
        </member>
        <member name="P:Kyameru.Core.Entities.Processable.Component">
            <summary>
            Gets the component.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Entities.Processable.Create``1">
            <summary>
            Creates an instance of the <see cref="T:Kyameru.Core.Entities.Processable"/> class.
            </summary>
            <typeparam name="T">Type of component.</typeparam>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Entities.Processable"/> class.</returns>
        </member>
        <member name="M:Kyameru.Core.Entities.Processable.Create(Kyameru.IProcessComponent)">
            <summary>
            Creates an instance of the <see cref="T:Kyameru.Core.Entities.Processable"/> class.
            </summary>
            <param name="component">Concrete component.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Entities.Processable"/> class.</returns>
        </member>
        <member name="M:Kyameru.Core.Entities.Processable.GetComponent(System.IServiceProvider)">
            <summary>
            Gets the component from either local store or service provider.
            </summary>
            <param name="provider">DI Service Provider.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.IProcessComponent"/> class.</returns>
        </member>
        <member name="T:Kyameru.Core.Entities.Routable">
            <summary>
            Core Kyameru Message.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Entities.Routable.#ctor(System.Collections.Generic.Dictionary{System.String,System.String},System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Entities.Routable"/> class.
            </summary>
            <param name="headers">Headers to add.</param>
            <param name="data">Data to add.</param>
        </member>
        <member name="P:Kyameru.Core.Entities.Routable.Headers">
            <summary>
            Gets the processing headers.
            </summary>
        </member>
        <member name="P:Kyameru.Core.Entities.Routable.Body">
            <summary>
            Gets the body of the message.
            </summary>
        </member>
        <member name="P:Kyameru.Core.Entities.Routable.Error">
            <summary>
            Gets the error of the message.
            </summary>
        </member>
        <member name="P:Kyameru.Core.Entities.Routable.InError">
            <summary>
            Gets a value indicating whether the message is in error.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Entities.Routable.SetBody``1(``0)">
            <summary>
            Sets the body of the message.
            </summary>
            <typeparam name="T">Type for the body message.</typeparam>
            <param name="value">Value to set the body.</param>
        </member>
        <member name="M:Kyameru.Core.Entities.Routable.SetInError(Kyameru.Core.Entities.Error)">
            <summary>
            Sets the message to be in error.
            </summary>
            <param name="error">Error object.</param>
        </member>
        <member name="M:Kyameru.Core.Entities.Routable.SetHeader(System.String,System.String)">
            <summary>
            Adds or Sets a header to the message.
            </summary>
            <param name="key">Header key.</param>
            <param name="value">Header value.</param>
        </member>
        <member name="T:Kyameru.Core.Entities.RouteAttributes">
            <summary>
            Route attributes class.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Entities.RouteAttributes.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Entities.RouteAttributes"/> class.
            </summary>
            <param name="componentUri">Valid Kyameru URI.</param>
        </member>
        <member name="P:Kyameru.Core.Entities.RouteAttributes.ComponentName">
            <summary>
            Gets the component name.
            </summary>
        </member>
        <member name="P:Kyameru.Core.Entities.RouteAttributes.Headers">
            <summary>
            Gets the headers.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Entities.RouteAttributes.ParseQuery(System.String)">
            <summary>
            Parses a URI query string.
            </summary>
            <param name="query">Query string.</param>
            <returns>Returns a dictionary of headers.</returns>
        </member>
        <member name="M:Kyameru.Core.Entities.RouteAttributes.GetQuery(System.UriBuilder)">
            <summary>
            Gets the query from the URI builder.
            </summary>
            <param name="uriBuilder">URI builder class.</param>
            <returns>Returns a URI query.</returns>
        </member>
        <member name="T:Kyameru.Core.Exceptions.ActivationException">
            <summary>
            Activation Exception
            </summary>
        </member>
        <member name="P:Kyameru.Core.Exceptions.ActivationException.Component">
            <summary>
            Gets the component responsible for exception.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Exceptions.ActivationException.#ctor(System.String,System.Exception,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Exceptions.ActivationException"/> class.
            </summary>
            <param name="message">Error Message.</param>
            <param name="innerException">Inner Exception.</param>
            <param name="component">Component responsible for error.</param>
        </member>
        <member name="T:Kyameru.Core.Exceptions.ComponentException">
            <summary>
            Component Exception
            </summary>
        </member>
        <member name="M:Kyameru.Core.Exceptions.ComponentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Exceptions.ComponentException"/> class.
            </summary>
            <param name="message">Error Message.</param>
        </member>
        <member name="M:Kyameru.Core.Exceptions.ComponentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Exceptions.ComponentException"/> class.
            </summary>
            <param name="message">Error Message.</param>
            <param name="innerException">Inner Exception.</param>
        </member>
        <member name="T:Kyameru.Core.Exceptions.CoreException">
            <summary>
            Kyameru Core Exception
            </summary>
        </member>
        <member name="M:Kyameru.Core.Exceptions.CoreException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Exceptions.CoreException"/> class.
            </summary>
            <param name="message">Error Message.</param>
        </member>
        <member name="T:Kyameru.Core.Exceptions.ProcessException">
            <summary>
            Process Exception
            </summary>
        </member>
        <member name="M:Kyameru.Core.Exceptions.ProcessException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Exceptions.ProcessException"/> class.
            </summary>
            <param name="message">Error Message.</param>
        </member>
        <member name="M:Kyameru.Core.Exceptions.ProcessException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Exceptions.ProcessException"/> class.
            </summary>
            <param name="message">Error Message.</param>
            <param name="innerException">Inner Exception.</param>
        </member>
        <member name="T:Kyameru.Core.Exceptions.RouteUriException">
            <summary>
            RouteException
            </summary>
        </member>
        <member name="M:Kyameru.Core.Exceptions.RouteUriException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.Exceptions.RouteUriException"/> class.
            </summary>
            <param name="message">Error Message.</param>
            <param name="innerException">Inner Exception.</param>
        </member>
        <member name="T:Kyameru.Core.Extensions.LoggerExtensions">
            <summary>
            Extensions for the logger to implement Logger Message.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Extensions.LoggerExtensions.info">
            <summary>
            Information log for from.
            </summary>
        </member>
        <member name="F:Kyameru.Core.Extensions.LoggerExtensions.debug">
            <summary>
            Debug log for from
            </summary>
        </member>
        <member name="F:Kyameru.Core.Extensions.LoggerExtensions.error">
            <summary>
            Error log
            </summary>
        </member>
        <member name="T:Kyameru.Core.Extensions.StringExtensions">
            <summary>
            String extensions.
            </summary>
        </member>
        <member name="M:Kyameru.Core.Extensions.StringExtensions.ToFirstCaseUpper(System.String)">
            <summary>
            Makes the first letter of a string uppercase.
            </summary>
            <param name="input">String to process.</param>
            <returns>Returns the input with the first letter as uppercase.</returns>
        </member>
        <member name="T:Kyameru.Core.RouteBuilder">
            <summary>
            Route builder.
            </summary>
        </member>
        <member name="F:Kyameru.Core.RouteBuilder.fromUri">
            <summary>
            From URI held to construct the atomic component.
            </summary>
        </member>
        <member name="F:Kyameru.Core.RouteBuilder.components">
            <summary>
            List of intermediary components.
            </summary>
        </member>
        <member name="M:Kyameru.Core.RouteBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Kyameru.Core.RouteBuilder"/> class.
            </summary>
            <param name="componentUri">Valid Kyameru URI.</param>
        </member>
        <member name="P:Kyameru.Core.RouteBuilder.ComponentCount">
            <summary>
            Gets the processing component count.
            </summary>
        </member>
        <member name="M:Kyameru.Core.RouteBuilder.Process(Kyameru.IProcessComponent)">
            <summary>
            Adds a processing component.
            </summary>
            <param name="processComponent">Component to add.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.RouteBuilder"/> class.</returns>
        </member>
        <member name="M:Kyameru.Core.RouteBuilder.Process``1">
            <summary>
            Create a new process component.
            </summary>
            <typeparam name="T">Type of process component.</typeparam>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.RouteBuilder"/> class.</returns>
        </member>
        <member name="M:Kyameru.Core.RouteBuilder.AddHeader(System.String,System.String)">
            <summary>
            Adds a header
            </summary>
            <param name="key">Header key.</param>
            <param name="value">Header value.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.RouteBuilder"/> class.</returns>
        </member>
        <member name="M:Kyameru.Core.RouteBuilder.AddHeader(System.String,System.Func{System.String})">
            <summary>
            Adds a header.
            </summary>
            <param name="key">Header key.</param>
            <param name="callback">Header callback.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.RouteBuilder"/> class.</returns>
        </member>
        <member name="M:Kyameru.Core.RouteBuilder.AddHeader(System.String,System.Func{Kyameru.Core.Entities.Routable,System.String})">
            <summary>
            Adds a header.
            </summary>
            <param name="key">Header key.</param>
            <param name="callback">Header callback.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.RouteBuilder"/> class.</returns>
        </member>
        <member name="M:Kyameru.Core.RouteBuilder.To(System.String)">
            <summary>
            Adds a to component.
            </summary>
            <param name="componentUri">Valid Kyameru URI.</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.Builder"/> class.</returns>
        </member>
        <member name="T:Kyameru.IProcessComponent">
            <summary>
            Intermediary Processing Component
            </summary>
        </member>
        <member name="M:Kyameru.IProcessComponent.Process(Kyameru.Core.Entities.Routable)">
            <summary>
            Process the incoming request.
            </summary>
            <param name="routable">Message to be processed.</param>
        </member>
        <member name="T:Kyameru.Route">
            <summary>
            Core route builder utility.
            </summary>
        </member>
        <member name="M:Kyameru.Route.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Kyameru.Route"/> class from being created.
            </summary>
        </member>
        <member name="M:Kyameru.Route.From(System.String)">
            <summary>
            Creates an instance of the route builder.
            </summary>
            <param name="componentUri">Valid Kyameru URI</param>
            <returns>Returns an instance of the <see cref="T:Kyameru.Core.RouteBuilder"/> class.</returns>
        </member>
    </members>
</doc>
